/******************************************************************************/
/***         Generated by IBExpert 2012.11.26.1 08.06.2016 22:55:38         ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/
SET SQL DIALECT 3;



SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE PROCEDURE AF_IMPORTDEFCODE (
    PSTART PHONEVAR,
    PEND PHONEVAR,
    AOPERATOR COMMENT,
    NREGION INTEGER)
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE AF_PORT_NEW_IMPORT
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE AF_PORT_NEW_INSERT (
    APHONE PHONEVAR,
    AOPERATOR VARCHAR(100))
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE PORT_NEW_TMP (
    PPHONE     PHONEVAR NOT NULL,
    POPERATOR  VARCHAR(100),
    PIRESULT   VARCHAR(100),
    PTIME      TIMESTAMP
);


CREATE TABLE TMP_ASTMASK (
    AMRULEID     INTEGER,
    ASTDEFSTART  PHONEVAR,
    ASTDEFEND    PHONEVAR,
    AMCOMMENT    COMMENT,
    AMTIME       TIMESTAMP DEFAULT current_timestamp
);




/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE PORT_NEW_TMP ADD CONSTRAINT PK_PORT_NEW_TMP PRIMARY KEY (PPHONE);


/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE AF_IMPORTDEFCODE (
    PSTART PHONEVAR,
    PEND PHONEVAR,
    AOPERATOR COMMENT,
    NREGION INTEGER)
AS
declare variable ARID integer;
begin
  select aru.arid from astoperator aor join astrule aru on aor.opid=aru.aropid
  where aor.opname like '%'||:aoperator and aor.opregion=:nregion
  into :arid;

  if (:ARID is not null) then
  begin
    update or insert into TMP_ASTMASK (AMRULEID, ASTDEFSTART, ASTDEFEND, AMCOMMENT)
    values (:ARID, '8'||:PSTART, '8'||:PEND, :nregion||' '||:aoperator)
    matching (astdefstart);
    update or insert into ASTMASK (AMRULEID, ASTDEFSTART, ASTDEFEND, AMCOMMENT)
    values (:ARID, '8'||:PSTART, '8'||:PEND, 'DEF')
    matching (astdefstart);
  end
end^


ALTER PROCEDURE AF_PORT_NEW_IMPORT
AS
declare variable APHONE PHONEVAR;
declare variable AOPER varchar(100);
declare variable AREGION integer;
declare variable AMNC integer;
begin
  for select pn.pphone,pn.poperator from port_new_tmp pn
  where pn.piresult is null
  into :aphone, :aoper
  as cursor pcur
  do
  begin
    aregion = null;
    amnc = null;
    select first 1 ao.opregion from astmask am
     join astrule ar on ar.arid=am.amruleid
     join astoperator ao on ao.opid=ar.aropid
     where '8'||:aphone between am.astdefstart and am.astdefend
     into :aregion;
    if (:aregion is null) then
     update port_new_tmp set piresult='unknown region' where current of pcur;
    else
    begin
     select ao.opmnc from astoperator ao where ao.opname like '%'||:aoper||'%' and ao.opregion=:aregion
     into :amnc;
     if (:amnc is null) then
      update port_new_tmp set piresult = 'no matching operator, region='||:aregion where current of pcur;
     else
      begin
       update or insert into astportnum (atphone, atmnc, atregion)
       values ('8'||:aphone, :amnc,  :aregion) matching (atphone);
       if (row_count=0) then
        update port_new_tmp set piresult = 'existed' where current of pcur;
       else
        update port_new_tmp set piresult = 'success' where current of pcur;
       end
    end
    when any do
     in autonomous transaction do
      update port_new_tmp set piresult = 'error '||coalesce(GDSCODE||' '||SQLCODE||' '||SQLSTATE,'') where current of pcur;
  end
end^


ALTER PROCEDURE AF_PORT_NEW_INSERT (
    APHONE PHONEVAR,
    AOPERATOR VARCHAR(100))
AS
begin
  if (exists (select first 1 am.amid from astmask am
     where '8'||:aphone between am.astdefstart and am.astdefend))
  then
     update or insert into port_new_tmp (pphone, poperator,piresult, ptime) values
     (:aphone,  :aoperator, null, current_timestamp);
end^

/* added fallback region */
create or alter procedure AF_IMPORTDEFCODE (
    PSTART PHONEVAR,
    PEND PHONEVAR,
    AOPERATOR comment,
    NREGION integer)
as
declare variable ARID integer;
begin
  select aru.arid from astoperator aor join astrule aru on aor.opid=aru.aropid
  where aor.opname like '%'||:aoperator and aor.opregion=:nregion
  into :arid;
  if (:arid is null) then
  begin
    nregion = 9999;
      select aru.arid from astoperator aor join astrule aru on aor.opid=aru.aropid
      where aor.opname like '%'||:aoperator and aor.opregion=:nregion
      into :arid;
  end

  if (:ARID is not null) then
  begin
    update or insert into TMP_ASTMASK (AMRULEID, ASTDEFSTART, ASTDEFEND, AMCOMMENT)
    values (:ARID, '8'||:PSTART, '8'||:PEND, :nregion||' '||:aoperator)
    matching (astdefstart);
    update or insert into ASTMASK (AMRULEID, ASTDEFSTART, ASTDEFEND, AMCOMMENT)
    values (:ARID, '8'||:PSTART, '8'||:PEND, 'DEF')
    matching (astdefstart);
  end
end^


SET TERM ; ^



